generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid()) @db.VarChar(255)
  name      String?   @db.VarChar(255)
  email     String?   @unique(map: "email") @db.VarChar(255)
  username  String?   @unique(map: "username") @db.VarChar(255)
  password  String?   @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.DateTime(0)
  updatedAt DateTime? @default(now()) @db.DateTime(0)
  huches    Hunch[]
}

model Game {
  id        String    @id @default(cuid()) @db.VarChar(255)
  homeTeam  String?   @db.VarChar(255)
  awayTeam  String?   @db.VarChar(255)
  gameTime  DateTime? @db.DateTime(0)
  createdAt DateTime? @default(now()) @db.DateTime(0)
  updatedAt DateTime? @default(now()) @db.DateTime(0)
  hunches   Hunch[]

  @@unique([homeTeam, awayTeam, gameTime], map: "home_team_away_team_game_time")
}

model Hunch {
  id            String    @id @default(cuid()) @db.VarChar(255)
  userId        String?   @db.VarChar(255)
  gameId        String?   @db.VarChar(255)
  homeTeamScore Int?
  awayTeamScore Int?
  createdAt     DateTime? @default(now()) @db.DateTime(0)
  updatedAt     DateTime? @default(now()) @db.DateTime(0)
  user          User?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Hunch_ibfk_1")
  game          Game?     @relation(fields: [gameId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Hunch_ibfk_2")

  @@unique([userId, gameId], map: "user_id_game_id")
  @@index([gameId], map: "gameId")
}
